
import numpy as np
from scipy.integrate import odeint
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
from datetime import datetime

def LV_model(y,t, params):
    R,S,A = y #Different populations in the model- Resistant, sensitive and antibiotic
    r_R, r_S, K_R, K_S, alpha_RS, alpha_SR, beta_R, beta_S, mu, delta_A = params
    
#Parameters of the equation:
    #r_R, the growth rate of the resistant population-
    #r_S, the growth rate of the sensitive population-1
    #K_R, the carrying capacity of the resistant population- 10,000
    #K_S, the carrying capacity of the sensitive population- 10,000
    #alpha_RS, the competition coefficient representing the effect of the sensitive population on the growth rate of the resistance population-1
    #alpha_SR, The competition coefficient representing the effect of the resistant population on the growth rate of the sensitive population-1
    #alpha_R, the effectiveness of the antibiotic against the resistant population
    #alpha_S, the effectiveness of the antibiotic againsts the sensitive pop.
    #mu, the mutation or acquisition rate at which sensitive bacteria become resistant
    #delta_A, the degradation rate of the antibiotic concentration over time
    
# The collection of nonlinear equation of the model
    
    dRdt = r_R * R * (1 - (R + alpha_RS * S) / K_R) - beta_R * A * R
    dSdt = r_S * S * (1 -(S + alpha_SR * R) / K_S) - beta_S * A * S + mu * S
    dAdt = -delta_A * A
    return [dRdt, dSdt, dAdt]

#The values of the parameters stated above
params = [0.1, 0.12, 1000, 800, 0.01, 0.01, 0.01, 0.1, 0.001, 0.02]

#y values at time 0. Y represents the initial population of each group
y0 = [200, 500, 50]

#Time intervals 
t = np.linspace(0, 100, 1000)
